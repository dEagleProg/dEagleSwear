import asyncio
import json
import random
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message, BotCommand
from dotenv import load_dotenv
import os

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env
load_dotenv()

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_TOKEN = os.getenv("BOT_TOKEN")

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ç–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω
if not API_TOKEN:
    raise ValueError("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ .env. –£–∫–∞–∂–∏ BOT_TOKEN –≤ .env!")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –ó–∞–≥—Ä—É–∑–∫–∞ JSON-—Ñ–∞–π–ª–∞ —Å —Ä—É–≥–∞—Ç–µ–ª—å—Å—Ç–≤–∞–º–∏
with open('swear_words.json', 'r', encoding='utf-8') as f:
    data = json.load(f)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥ –≤ –º–µ–Ω—é
async def set_commands(bot: Bot):
    commands = [
        BotCommand(command="/start", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        BotCommand(command="/russian", description="–°–ª—É—á–∞–π–Ω—ã–π —Ä—É—Å—Å–∫–∏–π –º–∞—Ç"),
        BotCommand(command="/english", description="–°–ª—É—á–∞–π–Ω—ã–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –º–∞—Ç"),
        BotCommand(command="/spanish", description="–°–ª—É—á–∞–π–Ω—ã–π –∏—Å–ø–∞–Ω—Å–∫–∏–π –º–∞—Ç")
    ]
    await bot.set_my_commands(commands)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def send_welcome(message: Message):
    await message.reply(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –º–∞—Ç–∞ –Ω–∞ —Ç—Ä—ë—Ö —è–∑—ã–∫–∞—Ö.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã:\n"
        "/russian ‚Äî —Å–ª—É—á–∞–π–Ω—ã–π —Ä—É—Å—Å–∫–∏–π –º–∞—Ç\n"
        "/english ‚Äî —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –º–∞—Ç\n"
        "/spanish ‚Äî —Å–ª—É—á–∞–π–Ω—ã–π –∏—Å–ø–∞–Ω—Å–∫–∏–π –º–∞—Ç"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /russian
@dp.message(Command("russian"))
async def random_russian_swear(message: Message):
    swear = random.choice(data["swear_words"]["russian"])
    word = swear["word"]
    eng_trans = swear["translations"]["english"]
    spa_trans = swear["translations"]["spanish"]
    response = f"{word} (üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø{eng_trans}, üá™üá∏{spa_trans})"
    await message.reply(response)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /english
@dp.message(Command("english"))
async def random_english_swear(message: Message):
    swear = random.choice(data["swear_words"]["english"])
    word = swear["word"]
    rus_trans = swear["translations"]["russian"]
    spa_trans = swear["translations"]["spanish"]
    response = f"üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø{word} ({rus_trans}, üá™üá∏{spa_trans})"
    await message.reply(response)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /spanish
@dp.message(Command("spanish"))
async def random_spanish_swear(message: Message):
    swear = random.choice(data["swear_words"]["spanish"])
    word = swear["word"]
    rus_trans = swear["translations"]["russian"]
    eng_trans = swear["translations"]["english"]
    response = f"üá™üá∏{word} ({rus_trans}, üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø{eng_trans})"
    await message.reply(response)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –≤ –º–µ–Ω—é –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    await set_commands(bot)
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())